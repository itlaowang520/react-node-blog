{"version":3,"sources":["Components/Home/index.js","Components/About/index.js","Components/Play/index.js","App.js","serviceWorker.js","index.js"],"names":["Header","Layout","Footer","Sider","MenuItem","Menu","Item","Home","state","collapsed","toggle","_this","setState","react_default","a","createElement","layout","trigger","collapsible","this","style","overflow","height","position","left","className","menu","theme","mode","defaultSelectedKeys","key","icon","type","marginLeft","background","padding","onClick","props","children","textAlign","Component","About","Play","App","react_router_dom","Home_Home","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0TAIEA,UACEC,IADFD,QAAQE,EACND,IADMC,OAAQC,EACdF,IADcE,MAEZC,EAAWC,IAAKC,KACDC,6MACjBC,MAAQ,CACJC,WAAW,KAGbC,OAAS,WACPC,EAAKC,SAAS,CACZH,WAAYE,EAAKH,MAAMC,qFAKzB,OACII,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACZ,EAAD,CACIc,QAAS,KACTC,aAAW,EACXT,UAAWU,KAAKX,MAAMC,UACtBW,MAAO,CACPC,SAAU,OAAQC,OAAQ,QAASC,SAAU,QAASC,KAAM,IAGhEX,EAAAC,EAAAC,cAAA,OAAKU,UAAU,QAAf,aACAZ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,MAAM,OAAOC,KAAK,SAASC,oBAAqB,CAAC,MACnDhB,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACVjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,SACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,iBACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,SAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,WACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,cACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,YACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,eACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,SACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,UAEAZ,EAAAC,EAAAC,cAACX,EAAD,CAAU0B,IAAI,KACdjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CAAMC,KAAK,SACXnB,EAAAC,EAAAC,cAAA,QAAMU,UAAU,YAAhB,YAIRZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQI,MAAO,CAAEa,WAAYd,KAAKX,MAAMC,UAAY,OAAS,UAC7DI,EAAAC,EAAAC,cAACf,EAAD,CAAQoB,MAAO,CAAEc,WAAY,OAAQC,QAAS,IAC1CtB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACIN,UAAU,UACVO,KAAMb,KAAKX,MAAMC,UAAY,cAAgB,YAC7C2B,QAASjB,KAAKT,UAGrBS,KAAKkB,MAAMC,SACZzB,EAAAC,EAAAC,cAACb,EAAD,CAAQkB,MAAO,CAAEmB,UAAW,WAA5B,qDAnEkBC,aCLbC,mLAEb,OACI5B,EAAAC,EAAAC,cAAA,yCAHuByB,aCAdE,mLAEb,OACI7B,EAAAC,EAAAC,cAAA,wDAHsByB,aCgBnBG,MAbf,WACE,OACE9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACE/B,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,KACEjC,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,KAAO,SAASC,UAAaP,IACpC5B,EAAAC,EAAAC,cAAC+B,EAAA,EAAD,CAAOC,KAAO,QAAQC,UAAaN,QCCzBO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d22f26f3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Layout, Menu, Icon } from 'antd';\nimport './index.css';\nconst {\n  Header, Footer, Sider,\n} = Layout;\nconst MenuItem = Menu.Item;\nexport default class Home extends Component {\n    state = {\n        collapsed: false,\n      };\n\n      toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n      }\n\n    render() {\n        return (\n            <Layout>\n                <Sider\n                    trigger={null}\n                    collapsible\n                    collapsed={this.state.collapsed}\n                    style={{\n                    overflow: 'auto', height: '100vh', position: 'fixed', left: 0,\n                    }}\n                >\n                <div className=\"logo\">node-blog</div>\n                <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={['1']}>\n                    <MenuItem key=\"1\">\n                        <Icon type=\"user\" />\n                        <span className=\"nav-text\">about</span>\n                        </MenuItem>\n                        <MenuItem key=\"2\">\n                        <Icon type=\"video-camera\" />\n                        <span className=\"nav-text\">play</span>\n                        </MenuItem>\n                        <MenuItem key=\"3\">\n                        <Icon type=\"upload\" />\n                        <span className=\"nav-text\">nav 3</span>\n                        </MenuItem>\n                        <MenuItem key=\"4\">\n                        <Icon type=\"bar-chart\" />\n                        <span className=\"nav-text\">nav 4</span>\n                        </MenuItem>\n                        <MenuItem key=\"5\">\n                        <Icon type=\"cloud-o\" />\n                        <span className=\"nav-text\">nav 5</span>\n                        </MenuItem>\n                        <MenuItem key=\"6\">\n                        <Icon type=\"appstore-o\" />\n                        <span className=\"nav-text\">nav 6</span>\n                        </MenuItem>\n                        <MenuItem key=\"7\">\n                        <Icon type=\"team\" />\n                        <span className=\"nav-text\">nav 7</span>\n                        </MenuItem>\n                        <MenuItem key=\"8\">\n                        <Icon type=\"shop\" />\n                        <span className=\"nav-text\">nav 8</span>\n                    </MenuItem>\n                </Menu>\n                </Sider>\n                <Layout style={{ marginLeft: this.state.collapsed ? '80px' : '200px' }}>\n                <Header style={{ background: '#fff', padding: 0 }}>\n                    <Icon\n                        className=\"trigger\"\n                        type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\n                        onClick={this.toggle}\n                    />\n                </Header>\n                {this.props.children}\n                <Footer style={{ textAlign: 'center' }}>\n                    nodejs-react-blog ©2019 Created by M.\n                </Footer>\n                </Layout>\n            </Layout>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class About extends Component {\n    render() {\n        return (\n            <div>\n                this is About Page!\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\n\nexport default class Play extends Component {\n    render() {\n        return (\n            <div>\n                大家好我是Play\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Home from './Components/Home';\nimport About from './Components/About';\nimport Play from './Components/Play';\nfunction App() {\n  return (\n    <Router>\n      <Home>\n        <Switch>\n          <Route path = '/about' component = {About} />\n          <Route path = '/play' component = {Play} />\n        </Switch>\n      </Home>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}